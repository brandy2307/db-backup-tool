{
  "_comment": "DO NOT EDIT: FILE GENERATED AUTOMATICALLY BY PANEL",
  "meta": {
    "version": "PTDL_v2",
    "update_url": "https://github.com/brandy2307/db-backup-tool/blob/main/dbtool-egg.json"
  },
  "exported_at": "2024-12-15T14:40:56+00:00",
  "name": "DB Backup Tool (Enhanced mit SSL-Konfiguration)",
  "author": "brandy@example.com",
  "uuid": "db9f372e-01d7-4c9b-a109-e49990d68d46",
  "description": "Tool f√ºr automatisierte Datenbank-Backups mit SSL-Unterst√ºtzung und Git Backup Integration",
  "features": [
    "eula=false"
  ],
  "docker_images": {
    "ghcr.io/parkervcp/yolks:nodejs_18": "ghcr.io/parkervcp/yolks:nodejs_18"
  },
  "file_denylist": [],
  "startup": "cd /home/container && if [ ! -f \"db-backup-tool/package.json\" ]; then echo \"ERROR: package.json not found. Please reinstall the server.\"; exit 1; fi && cd db-backup-tool && npm start",
  "config": {
    "files": "{\r\n    \"db-backup-tool/config.json\": {\r\n        \"parser\": \"json\",\r\n        \"find\": {\r\n            \"server.port\": \"{{server.build.default.port}}\",\r\n            \"server.host\": \"0.0.0.0\",\r\n            \"security.requireHttps\": \"{{env.REQUIRE_HTTPS}}\",\r\n            \"ssl.domain\": \"{{env.SSL_DOMAIN}}\",\r\n            \"ssl.email\": \"{{env.SSL_EMAIL}}\",\r\n            \"ssl.method\": \"{{env.SSL_METHOD}}\",\r\n            \"ssl.autoRenewal\": \"{{env.SSL_AUTO_RENEWAL}}\"\r\n        }\r\n    }\r\n}",
    "startup": "{\r\n    \"done\": \"Server l√§uft auf\"\r\n}",
    "logs": "{}",
    "stop": "^C"
  },
  "scripts": {
    "installation": {
      "script": "#!/bin/bash\n# DB Backup Tool Installation - Enhanced mit SSL-Konfiguration\n\nset -e\n\ndeclare -r DIR=\"/mnt/server\"\ndeclare -r APP_DIR=\"${DIR}/db-backup-tool\"\n\n# Fest definiertes Repository\nREPO_URL=\"https://github.com/brandy2307/db-backup-tool.git\"\nREPO_BRANCH=\"main\"\n\necho \"=================================\"\necho \"DB BACKUP TOOL INSTALLATION (Enhanced SSL)\"\necho \"=================================\"\necho \"Offizielles Repository: ${REPO_URL}\"\necho \"Branch: ${REPO_BRANCH}\"\necho \"Target: ${APP_DIR}\"\necho \"SSL-Unterst√ºtzung: Aktiviert\"\necho \"=================================\"\n\n# System Dependencies installieren\necho \"[1/7] Installing system dependencies...\"\napt update\napt install -y wget curl gnupg2 software-properties-common git openssl\n\n# Node.js installieren\necho \"[2/7] Installing Node.js...\"\ncurl -fsSL https://deb.nodesource.com/setup_18.x | bash -\napt install -y nodejs\n\n# Database Tools installieren\necho \"[3/7] Installing database tools...\"\napt install -y mysql-client || apt install -y default-mysql-client || echo \"MySQL client failed\"\napt install -y postgresql-client || apt install -y postgresql-client-common || echo \"PostgreSQL client failed\"\n\n# MongoDB Tools\necho \"Installing MongoDB tools...\"\ncurl -fsSL https://www.mongodb.org/static/pgp/server-7.0.asc | gpg --dearmor -o /usr/share/keyrings/mongodb-server-7.0.gpg\necho \"deb [ arch=amd64,arm64 signed-by=/usr/share/keyrings/mongodb-server-7.0.gpg ] https://repo.mongodb.org/apt/debian bookworm/mongodb-org/7.0 main\" | tee /etc/apt/sources.list.d/mongodb-org-7.0.list\napt update\napt install -y mongodb-database-tools || echo \"MongoDB tools failed\"\n\n# SSL/TLS Tools f√ºr Zertifikat-Management\necho \"[4/7] Installing SSL/TLS tools...\"\napt install -y certbot || echo \"Certbot installation failed (optional)\"\n\n# Git konfigurieren\necho \"[5/7] Configuring Git...\"\ngit config --global init.defaultBranch main\ngit config --global user.name \"DB Backup Tool\"\ngit config --global user.email \"backup@localhost\"\n\n# Tools verifikation\necho \"[6/7] Verifying tools...\"\necho \"Node.js: $(node --version)\"\necho \"NPM: $(npm --version)\"\necho \"Git: $(git --version)\"\necho \"OpenSSL: $(openssl version)\"\n\n# Wechsel zum Zielverzeichnis\ncd \"${DIR}\"\n\n# Alte Installation entfernen\nif [ -d \"${APP_DIR}\" ]; then\n    echo \"Removing old installation...\"\n    rm -rf \"${APP_DIR}\"\nfi\n\n# Repository Setup\necho \"[7/7] Setting up official repository...\"\necho \"Cloning from official repository: ${REPO_URL}\"\n\n# Test Repository-Zugriff\nif ! git ls-remote --heads \"${REPO_URL}\" >/dev/null 2>&1; then\n    echo \"ERROR: Official repository '${REPO_URL}' is not accessible!\"\n    exit 1\nfi\n\n# Repository klonen\necho \"Cloning official repository...\"\nif ! git clone -b \"${REPO_BRANCH}\" \"${REPO_URL}\" \"${APP_DIR}\"; then\n    echo \"ERROR: Git clone from official repository failed!\"\n    exit 1\nfi\n\n# Verifikation nach Clone\ncd \"${APP_DIR}\"\necho \"Repository cloned successfully to: $(pwd)\"\n\n# Pr√ºfe kritische Dateien\nif [ ! -f \"package.json\" ]; then\n    echo \"ERROR: package.json not found!\"\n    exit 1\nfi\n\nif [ ! -f \"server.js\" ]; then\n    echo \"ERROR: server.js not found!\"\n    exit 1\nfi\n\necho \"‚úì All required files found\"\n\n# Dependencies installieren\necho \"Installing dependencies...\"\nnpm cache clean --force\nif ! npm install --production; then\n    echo \"Trying with legacy-peer-deps...\"\n    npm install --production --legacy-peer-deps\nfi\n\n# Verzeichnisse erstellen\necho \"Creating directories...\"\nmkdir -p backups logs config public ssl\n\n# SSL-Verzeichnis Berechtigungen\nchmod 700 ssl\n\n# Config erstellen mit SSL-Unterst√ºtzung\nif [ ! -f \"config.json\" ]; then\n    echo \"Creating enhanced config.json with SSL support...\"\n    cat > config.json << EOF\n{\n  \"server\": {\n    \"port\": 8080,\n    \"host\": \"0.0.0.0\",\n    \"httpsPort\": 8443\n  },\n  \"security\": {\n    \"sessionSecret\": \"change-this-secret-key-in-production\",\n    \"jwtSecret\": \"change-this-jwt-secret-in-production\",\n    \"requireHttps\": false,\n    \"enable2FA\": false,\n    \"strongPasswords\": true,\n    \"maxFailedAttempts\": 5\n  },\n  \"ssl\": {\n    \"domain\": \"localhost\",\n    \"email\": \"admin@localhost\",\n    \"method\": \"selfsigned\",\n    \"autoRenewal\": true,\n    \"keySize\": 4096,\n    \"certValidity\": 365\n  },\n  \"backup\": {\n    \"defaultPath\": \"./backups\",\n    \"maxBackups\": 10,\n    \"compression\": true\n  },\n  \"logging\": {\n    \"level\": \"info\",\n    \"file\": \"./logs/app.log\"\n  },\n  \"updates\": {\n    \"autoUpdate\": true,\n    \"repository\": \"${REPO_URL}\",\n    \"branch\": \"${REPO_BRANCH}\"\n  },\n  \"gitBackup\": {\n    \"enabled\": false,\n    \"repository\": \"\",\n    \"username\": \"\",\n    \"branch\": \"main\"\n  }\n}\nEOF\nfi\n\n# SSL-Setup Script ausf√ºhrbar machen\nif [ -f \"ssl-setup.sh\" ]; then\n    chmod +x ssl-setup.sh\n    echo \"‚úÖ SSL-Setup Script bereit\"\nelse\n    echo \"‚ö†Ô∏è SSL-Setup Script nicht gefunden - wird zur Laufzeit erstellt\"\nfi\n\n# Update-Script ausf√ºhrbar machen\nif [ -f \"update.sh\" ]; then\n    chmod +x update.sh\n    echo \"‚úÖ Update-Script bereit\"\nfi\n\n# Dateiberechtigungen setzen\nchmod 755 .\nchmod 644 *.json *.js 2>/dev/null || true\nchmod 755 backups logs config public ssl 2>/dev/null || true\n\n# Finale Verifikation\necho \"=================================\"\necho \"INSTALLATION COMPLETE (Enhanced SSL)\"\necho \"=================================\"\necho \"Repository: ${REPO_URL}\"\necho \"Branch: ${REPO_BRANCH}\"\necho \"Directory: $(pwd)\"\necho \"SSL-Unterst√ºtzung: ‚úÖ Aktiviert\"\necho \"Verf√ºgbare SSL-Methoden: selfsigned, letsencrypt, manual\"\necho \"Standard SSL-Konfiguration: Self-Signed f√ºr localhost\"\necho \"=================================\"\n\necho \"‚úÖ Installation erfolgreich!\"\necho \"üîê SSL-Konfiguration √ºber Pelican Panel Environment Variables\"\necho \"üìù SSL-Setup wird automatisch beim ersten Start ausgef√ºhrt\"",
      "container": "debian:bookworm-slim",
      "entrypoint": "bash"
    }
  },
  "variables": [
    {
      "name": "Auto-Update aktivieren",
      "description": "Automatische Updates bei Serverstart vom offiziellen Repository",
      "env_variable": "AUTO_UPDATE",
      "default_value": "true",
      "user_viewable": true,
      "user_editable": true,
      "rules": "required|string|in:true,false",
      "sort": 1,
      "field_type": "text"
    },
    {
      "name": "Node Environment",
      "description": "Node.js Umgebung (production oder development)",
      "env_variable": "NODE_ENV",
      "default_value": "production",
      "user_viewable": true,
      "user_editable": true,
      "rules": "required|string|in:production,development",
      "sort": 2,
      "field_type": "text"
    },
    {
      "name": "Default Admin Username",
      "description": "Standard Admin Benutzername",
      "env_variable": "ADMIN_USERNAME",
      "default_value": "admin",
      "user_viewable": true,
      "user_editable": true,
      "rules": "required|string|min:3|max:20",
      "sort": 3,
      "field_type": "text"
    },
    {
      "name": "Default Admin Password",
      "description": "Standard Admin Passwort (bitte nach dem ersten Login √§ndern!)",
      "env_variable": "ADMIN_PASSWORD",
      "default_value": "admin123",
      "user_viewable": true,
      "user_editable": true,
      "rules": "required|string|min:6",
      "sort": 4,
      "field_type": "text"
    },
    {
      "name": "Session Secret",
      "description": "Geheimer Schl√ºssel f√ºr Sessions (mindestens 32 Zeichen)",
      "env_variable": "SESSION_SECRET",
      "default_value": "change-this-secret-key-in-production-with-random-string",
      "user_viewable": false,
      "user_editable": true,
      "rules": "required|string|min:32",
      "sort": 5,
      "field_type": "text"
    },
    {
      "name": "JWT Secret",
      "description": "Geheimer Schl√ºssel f√ºr JWT Tokens (mindestens 32 Zeichen)",
      "env_variable": "JWT_SECRET",
      "default_value": "change-this-jwt-secret-in-production-with-random-string",
      "user_viewable": false,
      "user_editable": true,
      "rules": "required|string|min:32",
      "sort": 6,
      "field_type": "text"
    },
    {
      "name": "Max Backups",
      "description": "Maximale Anzahl von Backups die gespeichert werden sollen",
      "env_variable": "MAX_BACKUPS",
      "default_value": "10",
      "user_viewable": true,
      "user_editable": true,
      "rules": "required|integer|min:1|max:100",
      "sort": 7,
      "field_type": "text"
    },
    {
      "name": "Enable Compression",
      "description": "Backup-Komprimierung aktivieren",
      "env_variable": "ENABLE_COMPRESSION",
      "default_value": "true",
      "user_viewable": true,
      "user_editable": true,
      "rules": "required|string|in:true,false",
      "sort": 8,
      "field_type": "text"
    },
    {
      "name": "Git Backup aktivieren",
      "description": "Automatisches Pushen von Backups zu Git Repository",
      "env_variable": "GIT_BACKUP_ENABLED",
      "default_value": "false",
      "user_viewable": true,
      "user_editable": true,
      "rules": "required|string|in:true,false",
      "sort": 9,
      "field_type": "text"
    },
    {
      "name": "Git Repository URL",
      "description": "HTTPS URL des Git Repositories f√ºr Backups",
      "env_variable": "GIT_BACKUP_REPOSITORY",
      "default_value": "",
      "user_viewable": true,
      "user_editable": true,
      "rules": "nullable|string|max:500",
      "sort": 10,
      "field_type": "text"
    },
    {
      "name": "Git Benutzername",
      "description": "Git Benutzername f√ºr Repository-Zugriff",
      "env_variable": "GIT_BACKUP_USERNAME",
      "default_value": "",
      "user_viewable": true,
      "user_editable": true,
      "rules": "nullable|string|max:100",
      "sort": 11,
      "field_type": "text"
    },
    {
      "name": "Git Access Token",
      "description": "Personal Access Token f√ºr Git Repository",
      "env_variable": "GIT_BACKUP_TOKEN",
      "default_value": "",
      "user_viewable": false,
      "user_editable": true,
      "rules": "nullable|string|max:200",
      "sort": 12,
      "field_type": "text"
    },
    {
      "name": "Git Branch",
      "description": "Git Branch f√ºr Backups",
      "env_variable": "GIT_BACKUP_BRANCH",
      "default_value": "main",
      "user_viewable": true,
      "user_editable": true,
      "rules": "required|string|max:50",
      "sort": 13,
      "field_type": "text"
    },
    {
      "name": "HTTPS aktivieren",
      "description": "Aktiviert HTTPS f√ºr die Anwendung (SSL-Zertifikat erforderlich)",
      "env_variable": "REQUIRE_HTTPS",
      "default_value": "false",
      "user_viewable": true,
      "user_editable": true,
      "rules": "required|string|in:true,false",
      "sort": 14,
      "field_type": "text"
    },
    {
      "name": "SSL-Methode",
      "description": "SSL-Zertifikat Methode: selfsigned (empfohlen f√ºr Pelican), letsencrypt (nur mit √∂ffentlicher Domain), manual (eigene Zertifikate)",
      "env_variable": "SSL_METHOD",
      "default_value": "selfsigned",
      "user_viewable": true,
      "user_editable": true,
      "rules": "required|string|in:selfsigned,letsencrypt,manual",
      "sort": 15,
      "field_type": "text"
    },
    {
      "name": "SSL Domain",
      "description": "Domain f√ºr SSL-Zertifikat (localhost f√ºr Self-Signed, echte Domain f√ºr Let's Encrypt)",
      "env_variable": "SSL_DOMAIN",
      "default_value": "localhost",
      "user_viewable": true,
      "user_editable": true,
      "rules": "required|string|min:3|max:255",
      "sort": 16,
      "field_type": "text"
    },
    {
      "name": "SSL Email",
      "description": "Email-Adresse f√ºr SSL-Zertifikat (erforderlich f√ºr Let's Encrypt)",
      "env_variable": "SSL_EMAIL",
      "default_value": "admin@localhost",
      "user_viewable": true,
      "user_editable": true,
      "rules": "required|string|min:5|max:255",
      "sort": 17,
      "field_type": "text"
    },
    {
      "name": "SSL Key Size",
      "description": "RSA Schl√ºssel-Gr√∂√üe in Bits (4096 empfohlen)",
      "env_variable": "SSL_KEY_SIZE",
      "default_value": "4096",
      "user_viewable": true,
      "user_editable": true,
      "rules": "required|integer|in:2048,4096",
      "sort": 18,
      "field_type": "text"
    },
    {
      "name": "SSL Zertifikat G√ºltigkeit",
      "description": "G√ºltigkeit des SSL-Zertifikats in Tagen",
      "env_variable": "SSL_CERT_VALIDITY",
      "default_value": "365",
      "user_viewable": true,
      "user_editable": true,
      "rules": "required|integer|min:30|max:3650",
      "sort": 19,
      "field_type": "text"
    },
    {
      "name": "SSL Auto-Renewal",
      "description": "Automatische Erneuerung von SSL-Zertifikaten (nur f√ºr Let's Encrypt)",
      "env_variable": "SSL_AUTO_RENEWAL",
      "default_value": "true",
      "user_viewable": true,
      "user_editable": true,
      "rules": "required|string|in:true,false",
      "sort": 20,
      "field_type": "text"
    },
    {
      "name": "SSL Setup beim Start",
      "description": "F√ºhrt SSL-Setup automatisch beim Server-Start aus",
      "env_variable": "SSL_SETUP_ON_START",
      "default_value": "true",
      "user_viewable": true,
      "user_editable": true,
      "rules": "required|string|in:true,false",
      "sort": 21,
      "field_type": "text"
    },
    {
      "name": "HTTPS Port",
      "description": "Der Port f√ºr den HTTPS-Server",
      "env_variable": "HTTPS_PORT",
      "default_value": "8443",
      "user_viewable": true,
      "user_editable": true,
      "rules": "required|integer|min:1|max:65535",
      "sort": 22,
      "field_type": "text"
    },
    {
      "name": "2FA aktivieren",
      "description": "Aktiviert die Zwei-Faktor-Authentifizierung",
      "env_variable": "ENABLE_2FA",
      "default_value": "false",
      "user_viewable": true,
      "user_editable": true,
      "rules": "required|string|in:true,false",
      "sort": 23,
      "field_type": "text"
    },
    {
      "name": "Starke Passw√∂rter erzwingen",
      "description": "Erzwingt die Nutzung von starken Passw√∂rtern",
      "env_variable": "STRONG_PASSWORDS",
      "default_value": "true",
      "user_viewable": true,
      "user_editable": true,
      "rules": "required|string|in:true,false",
      "sort": 24,
      "field_type": "text"
    },
    {
      "name": "Max. Fehlversuche (Login)",
      "description": "Maximale Anzahl an fehlgeschlagenen Login-Versuchen",
      "env_variable": "MAX_FAILED_ATTEMPTS",
      "default_value": "5",
      "user_viewable": true,
      "user_editable": true,
      "rules": "required|integer|min:1|max:20",
      "sort": 25,
      "field_type": "text"
    }
  ]
}